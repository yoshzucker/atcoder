(let* ((n (read))
       (hn (loop repeat n collect (read))))
  (loop for h in hn with u = 0
        do (incf u (cond ((= (mod u 3) 0)
                          (cond ((= (mod h 5) 0) (+ (* (floor h 5) 3) 0))
                                ((= (mod h 5) 1) (+ (* (floor h 5) 3) 1))
                                ((= (mod h 5) 2) (+ (* (floor h 5) 3) 2))
                                ((= (mod h 5) 3) (+ (* (floor h 5) 3) 3))
                                ((= (mod h 5) 4) (+ (* (floor h 5) 3) 3))))
                         ((= (mod u 3) 1)
                          (cond ((= (mod h 5) 0) (+ (* (floor h 5) 3) 0))
                                ((= (mod h 5) 1) (+ (* (floor h 5) 3) 1))
                                ((= (mod h 5) 2) (+ (* (floor h 5) 3) 2))
                                ((= (mod h 5) 3) (+ (* (floor h 5) 3) 2))
                                ((= (mod h 5) 4) (+ (* (floor h 5) 3) 2))))
                         ((= (mod u 3) 2)
                          (cond ((= (mod h 5) 0) (+ (* (floor h 5) 3) 0))
                                ((= (mod h 5) 1) (+ (* (floor h 5) 3) 1))
                                ((= (mod h 5) 2) (+ (* (floor h 5) 3) 1))
                                ((= (mod h 5) 3) (+ (* (floor h 5) 3) 1))
                                ((= (mod h 5) 4) (+ (* (floor h 5) 3) 2))))))
        finally (print u)))
