(let ((s (read-line))
      (u (read-line)))
  (loop for cs across s with hashs = (make-hash-table)
        for cu across u with hashu = (make-hash-table)
        do (incf (gethash cs hashs 0))
           (incf (gethash cu hashu 0))
        finally (loop for code from (char-code #\a) to (char-code #\z)
                      for c = (code-char code)
                      unless (find c "atcoder") 
                        do (when (/= (gethash c hashs 0) (gethash c hashu 0))
                             (return (princ "No")))
                      else
                        do (let ((cnts (gethash c hashs 0))
                                 (cntu (gethash c hashu 0)))
                             (if (< cnts cntu)
                                 (decf (gethash #\@ hashs 0) (- cntu cnts))
                                 (decf (gethash #\@ hashu 0) (- cnts cntu))))
                      finally (format t "~:[Yes~;No~]"
                                      (or (minusp (gethash #\@ hashs 0))
                                          (minusp (gethash #\@ hashu 0)))))))
