(let* ((n (read))
       (an (loop repeat n collect (read-line)))
       (ann (make-array (list n n)))
       (bnn (make-array (list n n))))
  (loop for i below n for a = (elt an i)
        do (loop for j below n for c across a
                 do (setf (aref ann i j) (digit-char-p c))
                    (setf (aref bnn i j) (digit-char-p c))))
  (loop for i below (1- n)
        do (let ((f (1+ i))
                 (e (1- n)))
             (setf (aref bnn 0 f) (aref ann 0 i))
             (setf (aref bnn e i) (aref ann e f))
             (setf (aref bnn i 0) (aref ann f 0))
             (setf (aref bnn f e) (aref ann i e)))
        finally (let* ((e (1- n))
                       (f (1- e)))
                  (setf (aref bnn 0 0) (aref ann 1 0))
                  (setf (aref bnn 0 e) (aref ann 0 f))
                  (setf (aref bnn e e) (aref ann f e))
                  (setf (aref bnn e 0) (aref ann e 1))))
  (loop for i below n
        do (loop for j below n
                 do (format t "~a" (aref bnn i j)))
           (format t "~%")))
